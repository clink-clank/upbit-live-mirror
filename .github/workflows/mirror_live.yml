name: Mirror Live
on:
  workflow_dispatch: {}
  push:
    branches: [ main ]
  schedule:
    - cron: "*/5 * * * *"
permissions:
  contents: write
concurrency:
  group: mirror-upbit
  cancel-in-progress: true

jobs:
  mirror:
    runs-on: ubuntu-latest
    env:
      BASE: "https://api.shenqn.uk"
      CHUNK: 15
      UA: "GA-mirror/1.1"
    steps:
      - uses: actions/checkout@v4

      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Build KRW market list (from Upbit)
        run: |
          set -euo pipefail
          curl -4fsSL "https://api.upbit.com/v1/market/all?isDetails=false" -H "User-Agent: $UA" \
            | jq -r '.[].market' | grep '^KRW-' > markets.txt

      - name: Fetch materials in chunks
        run: |
          set -euo pipefail
          rm -rf parts && mkdir -p parts
          mapfile -t ARR < markets.txt
          n=${#ARR[@]}; i=0; idx=1
          while [ $i -lt $n ]; do
            part=$(IFS=,; printf '%s' "${ARR[*]:i:CHUNK}")
            out="parts/part_${idx}.json"; ok=0
            for attempt in 1 2 3 4 5 6 7 8; do
              delay=$(python3 - <<'PY' "$attempt"
import random,sys
base=[0.0,0.6,1.0,1.7,3.0,5.0,8.0,13.0][int(sys.argv[1])-1]
print(base+random.uniform(0,0.7))
PY
              )
              sleep "$delay"
              url="${BASE}/materials.json?mode=selected&full=1&markets=${part}"
              code=$(curl -4sS -H "User-Agent: $UA" -H "Accept: application/json" \
                -w "%{http_code}" -o "$out.tmp" --max-time 40 "$url" || true)
              if [ "$code" = "200" ] && jq -e '(.markets|type=="array") and (.markets|length>=1)' "$out.tmp" >/dev/null 2>&1; then
                mv "$out.tmp" "$out"; ok=1; break
              fi
            done
            [ "$ok" = "1" ] || { echo "warn: part ${idx} failed"; rm -f "$out.tmp"; }
            i=$((i+CHUNK)); idx=$((idx+1))
          done
          ls -1 parts/part_*.json 2>/dev/null | sort > parts/list.txt || true

      - name: Merge -> LLM_MATERIALS.json
        run: |
          set -euo pipefail
          [ -s parts/list.txt ] || { echo "no parts"; exit 1; }
          jq -s '
            def M: [.[].markets[]];
            {
              version: (.[0].version // "LLM_MATERIALS_V1"),
              timestamps: (.[0].timestamps // {kst:"",utc:""}),
              meta: ((.[0].meta // {}) | .params = (.params // {}) | .params.markets = (M|map(.market)|unique)),
              markets: (M | unique_by(.market))
            }' $(cat parts/list.txt) > LLM_MATERIALS.json

      - name: Commit if changed
        run: |
          set -euo pipefail
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add LLM_MATERIALS.json || true
          git diff --cached --quiet || { git commit -m "Update materials (chunked)"; git push; }
